name: Release Publish

# This workflow handles the actual MOD publishing after PR merge.
# Most validations are already performed by the Release Validation workflow.

env:
  MOD_NAME: ${{ github.event.repository.name }}

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  publish-release:
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release-v')
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for GitHub Release creation and branch deletion

    steps:
    - name: Extract version from branch name
      id: version
      run: |
        BRANCH_NAME="${{ github.head_ref }}"
        VERSION=${BRANCH_NAME#release-v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=v$VERSION" >> $GITHUB_OUTPUT

    - name: Checkout release tag
      uses: actions/checkout@v5
      with:
        ref: ${{ steps.version.outputs.tag }}
        fetch-depth: 0

    - name: Verify version consistency
      uses: ./.github/actions/verify-version-consistency
      with:
        expected_version: ${{ steps.version.outputs.version }}

    - name: Set git user
      uses: git-actions/set-user@v1

    - name: Build MOD archive
      id: build_archive
      run: |
        MOD_NAME="${{ env.MOD_NAME }}"
        VERSION="${{ steps.version.outputs.version }}"
        ARCHIVE_NAME="${MOD_NAME}_${VERSION}.zip"

        git archive --prefix "${MOD_NAME}_${VERSION}/" HEAD -o "$ARCHIVE_NAME"

        echo "archive_name=$ARCHIVE_NAME" >> $GITHUB_OUTPUT

    - name: Extract changelog for this version
      id: changelog
      run: |
        # Extract changelog content for this version from changelog.txt
        CHANGELOG_CONTENT=$(sed -n "/^Version: ${{ steps.version.outputs.version }}$/,/^---\+$/p" changelog.txt | sed '1d; $d; s/^  //')

        # Output as multiline string
        echo "content<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Upload MOD to Factorio MOD portal
      uses: ./.github/actions/upload
      with:
        mod_name: ${{ env.MOD_NAME }}
        mod_version: ${{ steps.version.outputs.version }}
        zip_name: ${{ steps.build_archive.outputs.archive_name }}
        api_key: ${{ secrets.MOD_PORTAL_API_KEY }}

    - name: Create GitHub Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "${{ steps.version.outputs.tag }}" \
          --title "${{ env.MOD_NAME }} ${{ steps.version.outputs.tag }}" \
          --notes "${{ steps.changelog.outputs.content }}" \
          "${{ steps.build_archive.outputs.archive_name }}"

    - name: Cleanup release branch (if exists)
      continue-on-error: true
      run: |
        BRANCH="release-v${{ steps.version.outputs.version }}"
        if git ls-remote --heads origin "$BRANCH" | grep -q "$BRANCH"; then
          echo "Deleting release branch: $BRANCH"
          git push origin --delete "$BRANCH"
        else
          echo "Release branch already deleted (likely by auto-delete setting)"
        fi

    - name: Post-release summary
      run: |
        TAG="${{ steps.version.outputs.tag }}"
        echo "ðŸŽ‰ Release $TAG published successfully!"
        echo "- Using git tag created on release branch"
        echo "- MOD built from tagged commit and published to Factorio MOD portal"
        echo "- GitHub release created with assets"
        echo "- Release branch cleaned up"
